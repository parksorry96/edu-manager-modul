plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.3'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.edumanager'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springModulithVersion', "1.4.1")
}

dependencies {
    // ===== 기존 의존성들 =====
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.springframework.kafka:spring-kafka'
    implementation 'org.springframework.modulith:spring-modulith-events-api'
    implementation 'org.springframework.modulith:spring-modulith-starter-core'
    implementation 'org.springframework.modulith:spring-modulith-starter-jpa'

    // ===== 새로 추가할 의존성들 =====

    // JWT 라이브러리 (JJWT - Java JWT 최신 버전)
    implementation 'io.jsonwebtoken:jjwt-api:0.12.6'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.6'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.6'

    // Swagger/OpenAPI 3 문서화
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.7.0'

    // MapStruct (Entity ↔ DTO 매핑)
    implementation 'org.mapstruct:mapstruct:1.6.3'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.6.3'

    // Querydsl (복잡한 쿼리 작성용)
    implementation 'com.querydsl:querydsl-jpa:5.1.0:jakarta'
    annotationProcessor 'com.querydsl:querydsl-apt:5.1.0:jakarta'
    annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api'

    // 데이터베이스 마이그레이션 (Flyway)
    implementation 'org.flywaydb:flyway-core'
    implementation 'org.flywaydb:flyway-database-postgresql'

    // 캐싱 지원
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'com.github.ben-manes.caffeine:caffeine'

    // 모니터링 & 메트릭스
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'io.micrometer:micrometer-registry-prometheus'

    // JSON 처리 강화
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    implementation 'com.fasterxml.jackson.module:jackson-module-parameter-names'

    // 유틸리티 라이브러리
    implementation 'org.apache.commons:commons-lang3:3.18.0'
    implementation 'commons-io:commons-io:2.18.0'

    // 이메일/SMS 전송
    implementation 'org.springframework.boot:spring-boot-starter-mail'

    // 파일 업로드/다운로드
    implementation 'commons-fileupload:commons-fileupload:1.5'

    // 암호화 지원
    implementation 'org.bouncycastle:bcprov-jdk18on:1.79'

    // Excel 파일 처리 (학생/성적 관리용)
    implementation 'org.apache.poi:poi:5.3.0'
    implementation 'org.apache.poi:poi-ooxml:5.3.0'

    // QR 코드 생성 (출석 체크용)
    implementation 'com.google.zxing:core:3.5.3'
    implementation 'com.google.zxing:javase:3.5.3'

    // HTTP 클라이언트 (외부 API 연동)
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    // 기존 의존성들...
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.postgresql:postgresql'
    runtimeOnly 'org.springframework.modulith:spring-modulith-events-kafka'
    annotationProcessor 'org.projectlombok:lombok'

    // 테스트 의존성 강화
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.kafka:spring-kafka-test'
    testImplementation 'org.springframework.modulith:spring-modulith-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:postgresql'
    testImplementation 'org.testcontainers:kafka'
    testImplementation 'com.h2database:h2' // 테스트용 인메모리 DB
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

// ===== Querydsl 설정 추가 =====
def querydslDir = "$buildDir/generated/querydsl"

sourceSets {
    main.java.srcDirs += [querydslDir]
}

tasks.withType(JavaCompile).configureEach {
    options.getGeneratedSourceOutputDirectory().set(file(querydslDir))
}

clean.doLast {
    file(querydslDir).deleteDir()
}

// ===== 테스트 컨테이너 BOM 추가 =====
dependencyManagement {
    imports {
        mavenBom "org.springframework.modulith:spring-modulith-bom:${springModulithVersion}"
        mavenBom "org.testcontainers:testcontainers-bom:1.21.0"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
